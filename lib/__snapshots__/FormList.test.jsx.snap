// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot Form child - fixed count 1`] = `
<div
  className={null}
  style={
    Object {
      "borderColor": "#cccccc",
      "borderRadius": 3,
      "borderStyle": "solid",
      "borderWidth": 1,
      "padding": "1rem",
    }
  }
>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "solid",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "none",
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "marginBottom": "1rem",
        "paddingBottom": "1rem",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <div
        className={null}
        style={Object {}}
      >
        <input
          name="foo.bar"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          readOnly={false}
          style={Object {}}
          type="text"
          value="VALUE"
        />
      </div>
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <div
        className={null}
        style={Object {}}
      >
        <input
          name="foo.bar"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          readOnly={false}
          style={Object {}}
          type="text"
          value="VALUE2"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`snapshot Form child 1`] = `
<div
  className={null}
  style={
    Object {
      "borderColor": "#cccccc",
      "borderRadius": 3,
      "borderStyle": "solid",
      "borderWidth": 1,
      "padding": "1rem",
    }
  }
>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "solid",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "none",
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "marginBottom": "1rem",
        "paddingBottom": "1rem",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "paddingRight": "1.5rem",
        }
      }
    >
      <button
        className={null}
        onClick={[Function]}
        style={
          Object {
            "height": "3.5rem",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "verticalAlign": "-webkit-baseline-middle",
            "width": "3.5rem",
          }
        }
        type="button"
      >
        –
      </button>
    </div>
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <div
        className={null}
        style={Object {}}
      >
        <input
          name="foo.bar"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          readOnly={false}
          style={Object {}}
          type="text"
          value="VALUE"
        />
      </div>
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "paddingRight": "1.5rem",
        }
      }
    >
      <button
        className={null}
        onClick={[Function]}
        style={
          Object {
            "height": "3.5rem",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "verticalAlign": "-webkit-baseline-middle",
            "width": "3.5rem",
          }
        }
        type="button"
      >
        –
      </button>
    </div>
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <div
        className={null}
        style={Object {}}
      >
        <input
          name="foo.bar"
          onBlur={[Function]}
          onChange={[Function]}
          onKeyPress={[Function]}
          readOnly={false}
          style={Object {}}
          type="text"
          value="VALUE2"
        />
      </div>
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "none",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "solid",
        "borderWidth": 1,
        "marginTop": "1rem",
        "paddingTop": "1rem",
      }
    }
  >
    <button
      className={null}
      onClick={[Function]}
      style={
        Object {
          "height": "3.5rem",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "verticalAlign": "-webkit-baseline-middle",
          "width": "3.5rem",
        }
      }
      type="button"
    >
      +
    </button>
  </div>
</div>
`;

exports[`snapshot Input child - fixed count 1`] = `
<div
  className={null}
  style={
    Object {
      "borderColor": "#cccccc",
      "borderRadius": 3,
      "borderStyle": "solid",
      "borderWidth": 1,
      "padding": "1rem",
    }
  }
>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "solid",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "none",
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "marginBottom": "1rem",
        "paddingBottom": "1rem",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <input
        name="list[0]"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        readOnly={false}
        style={Object {}}
        type="text"
        value="VALUE"
      />
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <input
        name="list[1]"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        readOnly={false}
        style={Object {}}
        type="text"
        value="VALUE 2"
      />
    </div>
  </div>
</div>
`;

exports[`snapshot Input child 1`] = `
<div
  className={null}
  style={
    Object {
      "borderColor": "#cccccc",
      "borderRadius": 3,
      "borderStyle": "solid",
      "borderWidth": 1,
      "padding": "1rem",
    }
  }
>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "solid",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "none",
        "borderWidth": 1,
        "display": "flex",
        "flexDirection": "row",
        "marginBottom": "1rem",
        "paddingBottom": "1rem",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "paddingRight": "1.5rem",
        }
      }
    >
      <button
        className={null}
        onClick={[Function]}
        style={
          Object {
            "height": "3.5rem",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "verticalAlign": "-webkit-baseline-middle",
            "width": "3.5rem",
          }
        }
        type="button"
      >
        –
      </button>
    </div>
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <input
        name="list[0]"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        readOnly={false}
        style={Object {}}
        type="text"
        value="VALUE"
      />
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "display": "flex",
        "flexDirection": "row",
      }
    }
  >
    <div
      className={null}
      style={
        Object {
          "paddingRight": "1.5rem",
        }
      }
    >
      <button
        className={null}
        onClick={[Function]}
        style={
          Object {
            "height": "3.5rem",
            "paddingBottom": 0,
            "paddingLeft": 0,
            "paddingRight": 0,
            "paddingTop": 0,
            "verticalAlign": "-webkit-baseline-middle",
            "width": "3.5rem",
          }
        }
        type="button"
      >
        –
      </button>
    </div>
    <div
      className={null}
      style={
        Object {
          "flexGrow": 1,
        }
      }
    >
      <input
        name="list[1]"
        onBlur={[Function]}
        onChange={[Function]}
        onKeyPress={[Function]}
        readOnly={false}
        style={Object {}}
        type="text"
        value="VALUE 2"
      />
    </div>
  </div>
  <div
    className={null}
    style={
      Object {
        "borderBottomStyle": "none",
        "borderColor": "#cccccc",
        "borderLeftStyle": "none",
        "borderRightStyle": "none",
        "borderTopStyle": "solid",
        "borderWidth": 1,
        "marginTop": "1rem",
        "paddingTop": "1rem",
      }
    }
  >
    <button
      className={null}
      onClick={[Function]}
      style={
        Object {
          "height": "3.5rem",
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "verticalAlign": "-webkit-baseline-middle",
          "width": "3.5rem",
        }
      }
      type="button"
    >
      +
    </button>
  </div>
</div>
`;
